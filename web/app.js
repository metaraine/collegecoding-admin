// Generated by CoffeeScript 1.4.0
(function() {
  var Client, app, clientSchema, config, db, express, mongoose, render, rjs;

  express = require('express');

  mongoose = require('mongoose');

  rjs = require('rjs').installPrototypes();

  config = require('./config').config;

  render = require('./controller-helper.js').render;

  app = express();

  app.set('view engine', 'jade');

  app.set('views', __dirname + '/views');

  app.use(express.logger('dev'));

  app.use(express.bodyParser());

  app.use(express.cookieParser());

  app.use(express.session({
    secret: config.sessionSecret
  }));

  app.use(express["static"](__dirname + '/public'));

  mongoose.connect('mongodb://localhost/ccadmin');

  db = mongoose.connection;

  db.on('error', console.error.bind(console, 'connection error:'));

  db.once('open', function() {
    return console.log('Successfully connected to db');
  });

  clientSchema = mongoose.Schema({
    "Name": String,
    "Type": String,
    "First Contact": Date,
    "Last Contact": Date,
    "Balance": Number,
    "Auto Action": String,
    "Platform": String,
    "TZone": String,
    "Source": String,
    "City": String,
    "State": String,
    "Phone": String,
    "School": String,
    "Program": String,
    "Class": String,
    "Notes": String
  });

  Client = mongoose.model('Client', clientSchema);

  app.get('/', function(req, res) {
    return Client.find({
      Type: "Current Client"
    }).sort('Name').exec(function(err, clients) {
      return render(req, res, {
        title: 'CC Admin',
        seed: {
          view: 'index',
          data: {
            clients: clients
          }
        }
      });
    });
  });

  app.get('/:page', function(req, res) {
    return render(req, res, {
      title: 'CC Admin',
      seed: {
        view: req.params.page
      }
    });
  });

  app.listen(process.env.PORT, function() {
    return console.log('Listening on port ' + process.env.PORT);
  });

  exports.app = app;

}).call(this);
